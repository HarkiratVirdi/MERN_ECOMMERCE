[{"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\index.js":"1","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\App.js":"2","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Header.js":"3","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Product.js":"6","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Rating.js":"7","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\store\\store.js":"9","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\reducers\\productReducers.js":"10","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\constants\\productConstants.js":"11","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\actions\\productActions.js":"12","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Message.js":"13","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Loader.js":"14","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\CartScreen.js":"15","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\reducers\\cartReducer.js":"16","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\constants\\cartConstant.js":"17","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\actions\\cartAction.js":"18","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\reducers\\userReducer.js":"19","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\constants\\userConstants.js":"20","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\LoginScreen.js":"21","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\FormContainer.js":"22","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\actions\\userActions.js":"23","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\RegisterScreen.js":"24","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\ProfileScreen.js":"25","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\ShippingScreen.js":"26","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\CheckoutSteps.js":"27","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\PaymentScreen.js":"28","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\reducers\\orderReducers.js":"30","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\constants\\orderConstants.js":"31","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\actions\\orderActions.js":"32","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\OrderScreen.js":"33"},{"size":322,"mtime":1610163855608,"results":"34","hashOfConfig":"35"},{"size":1630,"mtime":1613409548844,"results":"36","hashOfConfig":"35"},{"size":1898,"mtime":1610675519726,"results":"37","hashOfConfig":"35"},{"size":327,"mtime":1609738544132,"results":"38","hashOfConfig":"35"},{"size":1102,"mtime":1610175433704,"results":"39","hashOfConfig":"35"},{"size":911,"mtime":1609789002787,"results":"40","hashOfConfig":"35"},{"size":1799,"mtime":1609748700500,"results":"41","hashOfConfig":"35"},{"size":4024,"mtime":1610578203636,"results":"42","hashOfConfig":"35"},{"size":1734,"mtime":1613447342874,"results":"43","hashOfConfig":"35"},{"size":1040,"mtime":1610178845790,"results":"44","hashOfConfig":"35"},{"size":374,"mtime":1610175579536,"results":"45","hashOfConfig":"35"},{"size":1175,"mtime":1610177132449,"results":"46","hashOfConfig":"35"},{"size":256,"mtime":1610175313172,"results":"47","hashOfConfig":"35"},{"size":410,"mtime":1610171126343,"results":"48","hashOfConfig":"35"},{"size":3857,"mtime":1610852250272,"results":"49","hashOfConfig":"35"},{"size":1134,"mtime":1610864229973,"results":"50","hashOfConfig":"35"},{"size":242,"mtime":1610863932439,"results":"51","hashOfConfig":"35"},{"size":1225,"mtime":1610864167956,"results":"52","hashOfConfig":"35"},{"size":1977,"mtime":1610737631077,"results":"53","hashOfConfig":"35"},{"size":864,"mtime":1610694948125,"results":"54","hashOfConfig":"35"},{"size":2227,"mtime":1610670987207,"results":"55","hashOfConfig":"35"},{"size":352,"mtime":1610671122773,"results":"56","hashOfConfig":"35"},{"size":3423,"mtime":1610695291590,"results":"57","hashOfConfig":"35"},{"size":3313,"mtime":1610693774178,"results":"58","hashOfConfig":"35"},{"size":3563,"mtime":1610695802691,"results":"59","hashOfConfig":"35"},{"size":2663,"mtime":1610863021238,"results":"60","hashOfConfig":"35"},{"size":1300,"mtime":1610863157618,"results":"61","hashOfConfig":"35"},{"size":1889,"mtime":1610935654503,"results":"62","hashOfConfig":"35"},{"size":5454,"mtime":1613327252989,"results":"63","hashOfConfig":"35"},{"size":1523,"mtime":1613447255658,"results":"64","hashOfConfig":"35"},{"size":574,"mtime":1613446922783,"results":"65","hashOfConfig":"35"},{"size":2622,"mtime":1613452833736,"results":"66","hashOfConfig":"35"},{"size":6713,"mtime":1613452222052,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"r3poax",{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\index.js",[],["144","145"],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\App.js",["146","147","148"],"import React from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/login\" component={LoginScreen} exact />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n          <Route path=\"/payment\" component={PaymentScreen} exact />\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/order/:id?\" component={OrderScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Header.js",["149","150"],"import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  Button,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>Shop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link className=\"fas fa-shopping-cart\" href=\"#/cart\">\r\n                  Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link href=\"#login\" className=\"fas fa-user\">\r\n                    Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Product.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\ProductScreen.js",["151","152","153"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  FormControl,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartAction\";\r\n\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n  // console.log(productDetails);\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n    // dispatch(addToCart(match.params.id, qty));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\"></Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n              <ListGroup.Item>\r\n                Description: ${product.description}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>${product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    className=\"btn-block\"\r\n                    type=\"button\"\r\n                    onClick={addToCartHandler}\r\n                    disabled={product.countInStock === 0}\r\n                  >\r\n                    Add To Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\store\\store.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Message.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\constants\\cartConstant.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\actions\\cartAction.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\reducers\\userReducer.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\RegisterScreen.js",["154"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  console.log(location.search);\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmpassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\ProfileScreen.js",["155"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, userInfo, dispatch, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmpassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\ShippingScreen.js",["156","157","158","159"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {saveShippingAddress} from '../actions/cartAction';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const {shippingAddress} = cart;\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\nconst dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n      history.push('/payment');\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n    <CheckoutSteps step1 step2/> \r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal Code\"\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Country\"\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n            Continue \r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\components\\CheckoutSteps.js",["160"],"import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer, Link } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\PaymentScreen.js",["161","162","163"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAddress, savePaymentMethod } from \"../actions/cartAction\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Paypal or Credit Card\"\r\n              id=\"Paypal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"Stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"Stripe\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.js",["164"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 30);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { success, error, order } = orderCreate;\r\n  // console.log(\"from place order screen\", orderCreate);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      // console.log(\"from useEffect order\", order.createdOrder._id);\r\n      console.log(\"from useEffect order\", order);\r\n      history.push(`order/${order._id}`);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode} {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => {\r\n                    return (\r\n                      <ListGroup.Item key={index}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x ${item.price} = $\r\n                            {item.qty * item.price}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\actions\\orderActions.js",["165"],"C:\\Users\\harki\\Desktop\\Coding\\Portfolio\\Ecommerce\\frontend\\src\\screens\\OrderScreen.js",["166","167"],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":5,"column":21,"nodeType":"174","messageId":"175","endLine":5,"endColumn":24},{"ruleId":"172","severity":1,"message":"176","line":5,"column":26,"nodeType":"174","messageId":"175","endLine":5,"endColumn":29},{"ruleId":"172","severity":1,"message":"177","line":8,"column":42,"nodeType":"174","messageId":"175","endLine":8,"endColumn":48},{"ruleId":"172","severity":1,"message":"178","line":6,"column":3,"nodeType":"174","messageId":"175","endLine":6,"endColumn":7},{"ruleId":"172","severity":1,"message":"179","line":7,"column":3,"nodeType":"174","messageId":"175","endLine":7,"endColumn":9},{"ruleId":"172","severity":1,"message":"180","line":10,"column":3,"nodeType":"174","messageId":"175","endLine":10,"endColumn":14},{"ruleId":"172","severity":1,"message":"181","line":13,"column":10,"nodeType":"174","messageId":"175","endLine":13,"endColumn":19},{"ruleId":"172","severity":1,"message":"182","line":13,"column":21,"nodeType":"174","messageId":"175","endLine":13,"endColumn":35},{"ruleId":"172","severity":1,"message":"183","line":8,"column":10,"nodeType":"174","messageId":"175","endLine":8,"endColumn":15},{"ruleId":"172","severity":1,"message":"184","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"185","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"184","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"173","line":3,"column":24,"nodeType":"174","messageId":"175","endLine":3,"endColumn":27},{"ruleId":"172","severity":1,"message":"176","line":3,"column":29,"nodeType":"174","messageId":"175","endLine":3,"endColumn":32},{"ruleId":"172","severity":1,"message":"184","line":3,"column":25,"nodeType":"174","messageId":"175","endLine":3,"endColumn":29},{"ruleId":"172","severity":1,"message":"185","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":2,"column":24,"nodeType":"174","messageId":"175","endLine":2,"endColumn":27},{"ruleId":"172","severity":1,"message":"186","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":29},{"ruleId":"172","severity":1,"message":"187","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"188","line":12,"column":3,"nodeType":"174","messageId":"175","endLine":12,"endColumn":18},{"ruleId":"172","severity":1,"message":"179","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"189","line":19,"column":9,"nodeType":"174","messageId":"175","endLine":19,"endColumn":20},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Switch' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'addToCart' is defined but never used.","'removeFromCart' is defined but never used.","'login' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'saveShippingAddress' is defined but never used.","'useState' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'addDecimals' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]